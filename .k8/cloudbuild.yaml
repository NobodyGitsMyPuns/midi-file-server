steps:
  # Step 1: Build the Docker image, using secret for build with a unique tag (commit SHA)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/midi-file-server:$SHORT_SHA', '.']
    secretEnv: ['MY_SECRET_ENV']

  # Step 2: Push the Docker image to Google Container Registry (GCR)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/midi-file-server:$SHORT_SHA']

  # Step 3: Extract the image digest and save it as an environment variable
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'set-digest'
    entrypoint: '/bin/sh'
    args:
      - '-c'
      - |
        IMAGE_DIGEST=$(gcloud container images describe gcr.io/$PROJECT_ID/midi-file-server:$SHORT_SHA --format='get(image_summary.digest)')
        echo "DIGEST=$IMAGE_DIGEST" > /workspace/env_vars.txt

  # Step 4: Deploy to Kubernetes using the .k8 folder YAML configurations
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'apply'
      - '-f'
      - './.k8/midi-file-server-deployment.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
      - 'CLOUDSDK_CONTAINER_CLUSTER=midi-cluster'

  # Step 5: Patch the deployment to set the image and environment variable (DIGEST)
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'env'
      - 'deployment/midi-file-server-deployment'
      - '--from-env-file=/workspace/env_vars.txt'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
      - 'CLOUDSDK_CONTAINER_CLUSTER=midi-cluster'

  # Step 6: Update the image to use the latest digest
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/midi-file-server-deployment'
      - 'midi-file-server=gcr.io/$PROJECT_ID/midi-file-server:$SHORT_SHA'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
      - 'CLOUDSDK_CONTAINER_CLUSTER=midi-cluster'

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/my-env-secret/versions/latest
      env: 'MY_SECRET_ENV'

substitutions:
  _SHORT_SHA: "$SHORT_SHA"
